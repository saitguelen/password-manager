<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <!-- main Projekt  (parent)  -->
    <parent>
        <groupId>com.sait</groupId>
        <artifactId>password-manager-fullstack</artifactId>
        <version>0.0.1-SNAPSHOT</version>
        <relativePath>../pom.xml</relativePath>
    </parent>

    <!-- einzige information für backend -->
    <artifactId>backend</artifactId>
    <name>backend</name>
    <description>Password Manager Backend API</description>

    <!--  wir ersetzen UTF-8  -->
    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
    </properties>

    <dependencies>
        <!-- Spring Boot Bağımlılıkları -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-jpa</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-security</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>

        <!-- MySQL datanbank -->
        <dependency>
            <groupId>com.mysql</groupId>
            <artifactId>mysql-connector-j</artifactId>
            <scope>runtime</scope>
        </dependency>

        <!-- Lombok für einfache Code -->
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <optional>true</optional>
        </dependency>

        <!-- JWT Bibliothek -->
        <dependency>
            <groupId>io.jsonwebtoken</groupId>
            <artifactId>jjwt-api</artifactId>
            <version>0.12.6</version>
        </dependency>
        <dependency>
            <groupId>io.jsonwebtoken</groupId>
            <artifactId>jjwt-impl</artifactId>
            <version>0.12.6</version>
            <scope>runtime</scope>
        </dependency>
        <dependency>
            <groupId>io.jsonwebtoken</groupId>
            <artifactId>jjwt-jackson</artifactId>
            <version>0.12.6</version>
            <scope>runtime</scope>
        </dependency>

        <!-- Test Abhängigkeit -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework.security</groupId>
            <artifactId>spring-security-test</artifactId>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <!-- JAR datei -->
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <configuration>
                    <excludes>
                        <exclude>
                            <groupId>org.projectlombok</groupId>
                            <artifactId>lombok</artifactId>
                        </exclude>
                    </excludes>
                </configuration>
            </plugin>
        </plugins>
    </build>
</project>

<!--<&#45;&#4 Die Einkaufsliste (pom.xml)-->
<!--        Das Allererste, was ich heute Morgen gemacht habe, war, meine Einkaufsliste zu schreiben. Was braucht eine moderne Java-Küche?-->
<!--        • Ein stabiles Grundgerüst: Dafür habe ich Spring Boot gewählt. Es ist wie ein Set von hochwertigen Edelstahl-Arbeitsflächen und Geräten, die perfekt zusammenpassen.-->
<!--        • Einen großen, sicheren Vorratsraum: Dafür habe ich mich für eine MySQL-Datenbank entschieden.-->
<!--        • Ein modernes Sicherheitssystem: Spring Security ist hier wie ein professionelles Schloss- und Alarmsystem für unsere Küche.-->
<!--        Diese Liste habe ich in eine Datei namens pom.xml geschrieben. Mein Einkäufer, Maven, hat dann alle diese Werkzeuge für mich besorgt und bereitgestellt&ndash;&gt;-->
